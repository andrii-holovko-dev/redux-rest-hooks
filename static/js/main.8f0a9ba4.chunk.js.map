{"version":3,"sources":["../../node_modules/reselect/es/index.js","../../src/selectors.js","../../src/hooks.js","../../src/http.js","../../node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js","../../node_modules/@redux-saga/is/dist/redux-saga-is.esm.js","../../node_modules/@redux-saga/core/dist/io-6de156f3.js","../../src/reducer.js","App.js","serviceWorker.js","reducers/rootReducer.js","sagas/album.js","store.js","index.js","../../src/saga.js"],"names":["defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","push","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","makeStoredDataByIdSelector","type","id","state","get","data","createAction","operation","entityType","queryParams","meta","useEntity","autoFetch","dispatch","useDispatch","updatedParams","selectStoredDataById","useMemo","storedDataById","useSelector","useEffect","refetch","patch","put","remove","useEntityList","selectStoredDataListByType","index","size","loadedArray","isLimitedLoaded","item","isInfiniteLoaded","isListLoaded","isLoadingList","listResponse","makeStoredDataListSelector","storedDataList","useEntityActions","useCallback","checkStatus","response","status","statusText","parseJSON","fetchJSON","fetch","createSymbol","name","IO","MULTICAST","SELF_CANCELLATION","notUndef","v","f","string","s","array","pattern","pat","symbol","channel","ch","take","close","sym","Boolean","Symbol","constructor","prototype","makeEffect","payload","_ref","combinator","patternOrChannel","multicastPattern","channel$1","action","getFnCallDescriptor","fnDescriptor","args","fn","context","call","fork","_len3","_key3","defaultStates","isLoading","isPutting","isPatching","isRemoving","isCreating","getError","putError","patchError","removeError","createError","pureOperation","getPendingKey","create","getErrorKey","React","memo","test","getList","JSON","stringify","onClick","Album","Date","useCreateEntity","useState","setIndex","App","fetchList","window","location","hostname","match","combineReducers","entity","entityById","omit","getListError","payloadList","requestIndex","responseSize","existingList","list","Math","obj","delay","demo","method","body","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","ReactDOM","render","StrictMode","store","createStore","rootReducer","applyMiddleware","entitySagas","run","album","comment","user","lastTasks","taskId","taskOrTasks","configureStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"igBAAA,SAASA,EAAqBC,EAAGC,GAC/B,OAAOD,IAAMC,EAGf,SAASC,EAA2BC,EAAeC,EAAMC,GACvD,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAKT,IADA,IAAIA,EAASF,EAAKE,OACTC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKJ,EAAcC,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,EAoBT,SAASC,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,KACZ,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,cAAcA,KACbG,KAAK,MACR,MAAM,IAAIC,MAAM,wGAAgHH,EAAkB,KAGpJ,OAAOL,EAiDF,IAAIS,EA9CJ,SAA+BC,GACpC,IAAK,IAAIC,EAAOC,UAAUhB,OAAQiB,EAAiBZ,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIG,EAAO,EAAGA,EAAOH,EAAMG,IACxGD,EAAeC,EAAO,GAAKF,UAAUE,GAGvC,OAAO,WACL,IAAK,IAAIC,EAAQH,UAAUhB,OAAQG,EAAQE,MAAMc,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACjFjB,EAAMiB,GAASJ,UAAUI,GAG3B,IAAIC,EAAiB,EACjBC,EAAanB,EAAMoB,MACnBnB,EAAeF,EAAgBC,GAE/BqB,EAAqBV,EAAQW,WAAMC,EAAW,CAAC,WAGjD,OAFAL,IAEOC,EAAWG,MAAM,KAAMT,aAC7BW,OAAOV,IAGNW,EAAWd,GAAQ,WAIrB,IAHA,IAAIe,EAAS,GACT7B,EAASI,EAAaJ,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAE1B4B,EAAOC,KAAK1B,EAAaH,GAAGwB,MAAM,KAAMT,YAI1C,OAAOQ,EAAmBC,MAAM,KAAMI,MAWxC,OARAD,EAASN,WAAaA,EACtBM,EAASxB,aAAeA,EACxBwB,EAASP,eAAiB,WACxB,OAAOA,GAETO,EAASG,oBAAsB,WAC7B,OAAOV,EAAiB,GAEnBO,GAIiBI,EA9ErB,SAAwBC,GAC7B,IAAIpC,EAAgBmB,UAAUhB,OAAS,QAAsB0B,IAAjBV,UAAU,GAAmBA,UAAU,GAAKvB,EAEpFyC,EAAW,KACXC,EAAa,KAEjB,OAAO,WAOL,OANKvC,EAA2BC,EAAeqC,EAAUlB,aAEvDmB,EAAaF,EAAKR,MAAM,KAAMT,YAGhCkB,EAAWlB,UACJmB,M,MCvBEC,EAA6B,CAACC,EAAMC,IACxCzB,EACJ0B,GAAUC,cAAID,OAAD,kBADK,EACL,MACbE,GAFH,GCJIC,EAAe,CAACC,EAAWC,EAAYC,KAAgB,CAC3DR,KAAO,oBAAYM,EAAZ,YAAD,GADsD,cAE5DG,KAAM,0BAGJD,iBAISE,EAAY,CAACV,EAAMQ,EAAP,GAAyBG,GAAzB,KACvB,MAAMC,EAAWC,cACXC,EAAgBN,sBAA+B,EAA/BA,CAAiDP,GAAI,gBAErEc,EAAuBC,kBAC3B,IAAMjB,EAA2BC,EAAMc,EADL,IAElC,CAACd,EAAMc,EAFT,KAKMG,EAAiBC,YAAvB,GAQA,OANAC,oBAAU,MACHF,GAAL,GACEL,EAASP,EAAa,MAAOL,EAA7BY,KAED,CAACK,EAAgBN,EAJpBQ,IAMA,eAAO,EAAP,CAEEC,QAAS,IAAMR,EAASP,EAAa,MAAOL,EAFvC,IAGLqB,MAAO,IAAMT,EAASP,EAAa,QAASL,EAHvC,IAILsB,IAAK,IAAMV,EAASP,EAAa,MAAOL,EAJnC,IAKLuB,OAAQ,IAAMX,EAASP,EAAa,SAAUL,EAAxB,OA2BbwB,EAAgB,CAACxB,EAAMQ,EAAP,GAAyBG,GAAzB,KAC3B,MAAMC,EAAWC,cAEXY,EAA6BT,kBACjC,IDpDsC,EAAChB,EAAM0B,EAAP,EAAkBC,EAAlB,IACjCnD,EACJ0B,GAAUA,OADQ,GAElBE,IACC,MAAMwB,EAAczB,cAAIC,EAAM,OAAQ,IAAIpC,MAAM0D,EAAV,aAAtC,IACMG,EAAmBD,UAAuBF,EAAxB,GAA0CE,UAAyBF,EAAzBE,SAA6CE,QAA/G,IAAuHA,GACjHC,EAAmB5B,cAAIC,EAAM,mBAAVD,IAAzB,GACA,MAAO,CACLC,KAAMD,cAAIC,EAAM,OAAVD,YACWwB,EAAOD,EAAH,OADfvB,OAEC2B,GAAQ3B,cAAIC,EAAM,QAAP,OAFZD,EAEY,YAFZA,OAGI2B,GAJL,GAKLE,aAAcL,EAAOE,EALhB,EAMLI,cAAe9B,cAAIC,EANd,iBAOL8B,aAAc/B,cAAIC,EAAM,mBCsCtB+B,CAA2BnC,EAAMQ,EAAP,MAA0BA,EADlB,MAExC,CAACR,EAAMQ,EAAP,MAA0BA,EAF5B,OAKM4B,EAAiBlB,YAAvB,GAQA,OANAC,oBAAU,MACHiB,EAAD,cAAJ,GACExB,EAASP,EAAa,UAAWL,EAAjCY,KAED,CAACwB,EAAD,eAJHjB,IAMO,CACLf,KAAMgC,EADD,KAELF,aAAcE,EAFT,aAGLH,cAAeG,EAHV,cAILhB,QAAS,IAAMR,EAASP,EAAa,UAAWL,EAAzB,MAIdqC,EAAoBrC,IAC/B,MAAMY,EAAWC,cAyBjB,MAAO,KAxBKyB,sBACV,CAAC9B,EAAD,KAAsBI,EAASP,EAAa,MAAOL,EAD9B,IAErB,CAACY,EAFH,IAwBO,QApBS0B,sBACd,CAAC9B,EAAD,KAAsBI,EAASP,EAAa,UAAWL,EAD9B,IAEzB,CAACY,EAFH,IAoBO,OAhBQ0B,sBACb,CAAC9B,EAAD,KAAuBI,EAASP,EAAa,SAAUL,EAD/B,IAExB,CAACY,EAFH,IAgBO,IAZK0B,sBACV,CAAC9B,EAAD,KAAsBI,EAASP,EAAa,MAAOL,EAD9B,IAErB,CAACY,EAFH,IAYO,MARO0B,sBACZ,CAAC9B,EAAD,KAAsBI,EAASP,EAAa,QAASL,EAD9B,IAEvB,CAACY,EAFH,IAQ0CW,OAJ3Be,sBACb,CAAC9B,EAAD,KAAsBI,EAASP,EAAa,SAAUL,EAD9B,IAEtB,CAACY,EAFL,MC/GF,SAAS2B,EAAYC,GACnB,GAAIA,eAA0BA,SAA9B,IACE,SAEA,KAAM,CAAEC,OAAQD,EAAV,OAA2BE,WAAYF,EAASE,YAI1D,SAASC,EAAUH,GACjB,OAAOA,EAAP,OAGF,MAAaI,EAAY,QAAaC,yBAA/B,GCZP,IAAIC,EAAe,SAAsBC,GACvC,MAAO,gBAAkBA,GASvBC,EAEJF,EAAa,MAITG,EAEJH,EAAa,aAITI,EAEJJ,EAAa,qBCnBTK,EAAW,SAAkBC,GAC/B,OAAa,OAANA,QAAoB/D,IAAN+D,GAEnBxD,EAAO,SAAcyD,GACvB,MAAoB,oBAANA,GAKZC,EAAS,SAAgBC,GAC3B,MAAoB,kBAANA,GAEZC,EAAQxF,MAAMC,QAyBdwF,EAAU,SAASA,EAAQC,GAC7B,OAAOA,IAAQJ,EAAOI,IAAQC,EAAOD,IAAQ9D,EAAK8D,IAAQF,EAAME,IAAQA,EAAIxF,MAAMuF,KAEhFG,EAAU,SAAiBC,GAC7B,OAAOA,GAAMjE,EAAKiE,EAAGC,OAASlE,EAAKiE,EAAGE,QAKpCJ,EAAS,SAAgBK,GAC3B,OAAOC,QAAQD,IAA0B,oBAAXE,QAAyBF,EAAIG,cAAgBD,QAAUF,IAAQE,OAAOE,WC8QtG,IAqCIC,EAAa,SAAoBrE,EAAMsE,GACzC,IAAIC,EAEJ,OAAOA,EAAO,IAASvB,IAAM,EAAMuB,EAAKC,YAAa,EAAOD,EAAKvE,KAAOA,EAAMuE,EAAKD,QAAUA,EAASC,GAgBxG,SAAST,EAAKW,EAAkBC,GAS9B,YARyB,IAArBD,IACFA,EAAmB,KAOjBhB,EAAQgB,GACHJ,EAlEA,OAkEiB,CACtBZ,QAASgB,ID9UNb,EAD0BC,ECmVnBY,IDlVQZ,EAAGZ,ICkVUE,EAASuB,IAAqBjB,EAAQiB,GAChEL,EAxEA,OAwEiB,CACtBT,QAASa,EACThB,QAASiB,IAITd,EAAQa,GACHJ,EA/EA,OA+EiB,CACtBT,QAASa,SAIT,EDhWU,IAAmBZ,ECyWnC,SAAS,EAAIc,EAAWC,GD7ZZ,IAAexB,EC8azB,OD7aa,QADYA,ECwafwB,SDvaiBvF,IAAN+D,KCwanBwB,EAASD,EAETA,OAAYtF,GAGPgF,EA7GC,MA6Ge,CACrBT,QAASe,EACTC,OAAQA,IAkDZ,SAASC,EAAoBC,EAAcC,GACzC,IACIC,EADAC,EAAU,KAmBd,OAhBIrF,EAAKkF,GACPE,EAAKF,GAEDtB,EAAMsB,IACRG,EAAUH,EAAa,GACvBE,EAAKF,EAAa,KAElBG,EAAUH,EAAaG,QACvBD,EAAKF,EAAaE,IAGhBC,GAAW3B,EAAO0B,IAAOpF,EAAKqF,EAAQD,MACxCA,EAAKC,EAAQD,KAIV,CACLC,QAASA,EACTD,GAAIA,EACJD,KAAMA,GAQV,SAASG,EAAKJ,GACZ,IAAK,IAAIpG,EAAOC,UAAUhB,OAAQoH,EAAO,IAAI/G,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIG,EAAO,EAAGA,EAAOH,EAAMG,IAClGkG,EAAKlG,EAAO,GAAKF,UAAUE,GAS7B,OAAOwF,EAxME,OAwMeQ,EAAoBC,EAAcC,IA0B5D,SAASI,EAAKL,GAQZ,IAAK,IAAIM,EAAQzG,UAAUhB,OAAQoH,EAAO,IAAI/G,MAAMoH,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACxGN,EAAKM,EAAQ,GAAK1G,UAAU0G,GAG9B,OAAOhB,EA5OE,OA4OeQ,EAAoBC,EAAcC,ICljB5D,MAAMO,EAAgB,CACpBC,WADoB,EAEpBC,WAFoB,EAGpBC,YAHoB,EAIpBC,YAJoB,EAKpBC,YALoB,EAMpBC,SANoB,KAOpBC,SAPoB,KAQpBC,WARoB,KASpBC,YAToB,KAUpBC,YAAa,MAGTC,EAAgB3F,GACpBA,4CADF,IAKM4F,EAAgB5F,IACZ,CACNH,IADM,YAENgG,OAFM,aAGN7E,IAHM,YAIND,MAJM,aAKNE,OAAQ,cACP0E,EANH,KASIG,EAAc9F,GAClB,UAAU2F,EAAV,YCvBmBI,IAAMC,KAAK,KAC9B,MAAMC,EAAO/E,EAAc,UAAW,CAAEG,KAAM,KACvC6E,EAAWnE,EAAiB,WAA5BmE,QAGP,OAAO,oCAAE,6BAAMC,KAAKC,UAAUH,EAAKnG,OAAY,4BAAQuG,QAAS,IAAMH,EAAQ,CAAE9E,MAAO,GAAIC,KAAM,MAAlD,WAVjD,MAaMiF,EAAQP,IAAMC,KAAK,EAAErG,SAAS,MAAD,EACTuB,EAAc,SAAtBpB,GADiB,EAC1BgB,QAD0B,EACjBhB,MADiB,EN0BJ,EAACJ,EAAMQ,EAAP,MAC7B,MAAMI,EAAWC,cAEXZ,EAAKe,kBACT,IAAM,oBAAN,QAA0B,IAAI6F,MADd,WAEhB,CAFF,IAKM/F,EAAgB,iBAAH,CAAqBb,OAElCc,EAAuBC,kBAC3B,IAAMjB,EAA2BC,EAAMc,EADL,IAElC,CAACd,EAAMc,EAFT,KAKMG,EAAiBC,YAAvB,GAEA,sBAAO,EAAP,CAEEiF,OAAQ,IAAMvF,EAASP,EAAa,SAAUL,EAAxB,OM3CyB8G,CAAgB,SAA1BX,GAFN,EAE1B/E,QAF0B,EAEPhB,KAFO,EAEM+F,QACvC,OAAO,6BAAK,4BAAQQ,QAASR,GAAjB,UAAyCM,KAAKC,UAAUtG,MAIzDiG,IAAMC,KAAK,EAAGrG,SAAU,MAAD,EACNS,EAAU,OAAQ,CAACT,OADb,EAC1BG,KAD0B,EACpBmF,UACd,OAAO,6BAAMkB,KAAKC,UAAUH,KAAKnG,SAGhBiG,IAAMC,KAAK,KAAO,MAAD,EACRS,mBAAS,GADD,mBAC3BrF,EAD2B,KACpBsF,EADoB,KAE3B5G,EAAQoB,EAAc,QAAS,CAAEE,QAAOC,KAAM,EAAG4E,KAAM7E,IAAvDtB,KAIP,OAAO,oCAAE,6BAAMqG,KAAKC,UAAUtG,IAC5B,4BAAQuG,QAAS,IAAMK,EAAStF,EAAQ,IAAxC,QACA,4BAAQiF,QAAS,IAAMK,EAAStF,EAAQ,IAAxC,WAqCWuF,MA/Bf,WAAgB,MAAD,EACeF,qBADf,gCAEmBA,mBAAS,UAF5B,gCAG4C1E,EAAiB,YAC1E,OAJa,EAGN8D,OAHM,EAGgBe,UACtB,oCACL,kBAACN,EAAD,CAAO3G,GAAI,IACX,kBAAC2G,EAAD,CAAO3G,GAAI,MCpCKgE,QACW,cAA7BkD,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBCfSC,cAAgB,CAC7BnH,KH+Ba,CAACF,EAAD,IAAW,UAAUO,OAAO,OAEzC,MAAM+G,EAASrH,cAAID,EAAOO,EAAR,WAAlB,IACML,EAAOD,cAAIqH,EAAQ,OAAzB,IACMC,EAAarH,EAAKD,cAAI,EAATC,oBAAnB,GAEA,OAAQK,EAAR,WACE,qBACE,sBAAO,EAAP,CAEE,CAACA,EAAD,2BAAmB,EAAnB,CAEEL,KAAM,eACDD,cAAID,EAAMO,EAAP,mBADF,IAAF,CAEF,CAAC6D,EAAD,mBAAc,EAAd,CAEElE,KAAMkE,IAER,CAAC7D,cAAD,mBAAuB,EAAvB,CAEEL,KAAMkE,UAKhB,UACA,UACA,YACA,aACA,aACE,sBAAO,EAAP,CAEE,CAAC7D,EAAD,2BAAmB,EAAnB,CAEEL,KAAM,iBAAF,CAEF,CAACK,cAAD,mBAAuB,EAAvB,CAEE,CAACyF,EAAczF,EAAf,aAFqB,EAGrB,CAAC2F,EAAY3F,EAAb,YAA+B,aAKzC,kBACA,kBACA,oBACA,qBACA,qBACE,sBAAO,EAAP,CAEE,CAACA,EAAD,2BAAmB,EAAnB,CAEEL,KAAM,iBAAF,CAEF,CAACK,cAAD,mBAAuB,EAAvB,CAEE,CAACyF,EAAczF,EAAf,aAFqB,EAGrB,CAAC2F,EAAY3F,EAAb,YAA+B6D,UAKzC,kBACA,kBACA,oBACE,sBAAO,EAAP,CAEE,CAAC7D,EAAD,2BAAmB,EAAnB,CAEEL,KAAM,iBAAF,CAEF,CAACK,cAAD,mBAAuB,EAAvB,CAEE,CAACyF,EAAczF,EAAf,aAFqB,EAGrB,CAAC2F,EAAY3F,EAAb,YAHqB,KAIrBL,KAAMkE,UAKhB,qBACE,sBAAO,EAAP,CAEE,CAAC7D,EAAD,2BAAmB,EAAnB,CAEEL,KAAMsH,eAAKvH,cAAID,EAAMO,EAAP,mBAAJ,IAA0CA,cAA1C,QAGhB,cACE,sBAAO,EAAP,CAEE,CAACA,EAAD,2BAAmB,EAAnB,CAEEwB,eAFiB,EAGjB0F,aAAc,SAGpB,sBACE,sBAAO,EAAP,CAEE,CAAClH,EAAD,2BAAmB,EAAnB,CAEEwB,eAFiB,EAGjB0F,aAAcrD,MAGpB,sBACE,MAAMsD,EAActD,EAApB,KAEMuD,EAAepH,qBAArB,EACMqH,EAAgBrH,oBAAyBmH,EAA/C,OACMG,EAAe5H,cAAID,EAAMO,EAAP,mBAAxB,IAEMsB,EAAmB5B,cAAID,EAAMO,EAAP,+BAA5B,IACA,sBAAO,EAAP,CAEE,CAACA,EAAD,2BAAmB,EAAnB,CAEEwB,eAFiB,EAGjB0F,aAHiB,KAIjBzF,aAAcwF,eAAKpD,EAJF,QAKjBvC,iBAAkBtB,oCAA2C,EAA3CA,CAEhB,KAAgB,IAElBuH,KAAO,IAAIhK,MAAMiK,SAASJ,EAATI,EAAsCF,EAAjD,wBAGA,CAACjG,EAAMJ,IAAYA,EAAD,GAA2BA,EAASmG,EAArC,EACfE,EADe,IACQH,EAAYlG,EAAZkG,IAAqC,CAAE3H,GAAI,OAbzD,IAejBG,KAAM,eACDD,cAAID,EAAMO,EAAP,mBADF,IAAF,GAECmH,EAAA,IACK9F,GAAD,eAAW,EAAX,CAA+B1B,KAAM0B,KADzC,OAES,CAACoG,EAAKpG,KACZoG,EAAIpG,OAAJoG,MACA,GAJH,SASX,QACE,a,QIhLC,MAAM/H,EAAG,UAAG,SAANA,GAAiB,GAACF,IAAZ,iEACjB,OADiB,SACXkI,YAAM,KADK,gCAEV,CAAEC,KAAM,IAAKnI,OAFH,oCAANE,MAMAqG,GAAO,UAAG,SAAVA,GAAqB,GAACvG,IAAZ,uEACR,OADQ,SACFiF,YAAKtC,EAAD,gDADF,cACfxC,EADe,yBAEd,CAAEA,OAAMuB,KAAM,MAFA,oCAAV6E,MAOAL,GAAM,UAAG,SAATA,EAAoB7B,GAAX,iEACb,OADa,SACPY,YAAKtC,EAAD,+CAA4D,CAAEyF,OAAQ,OAAQC,KAAMhE,IADjF,4EAAT6B,MAIA7E,GAAM,EAAErB,QAAQ2C,EAAU,+CAAD,OAAgD3C,IACzEoB,GAAQ,EAAEpB,QAAQ2C,EAAU,+CAAD,OAAgD3C,IAC3EsB,GAAS,EAAEtB,QAAQ2C,EAAU,+CAAD,OAAgD3C,ICbnFsI,GAAmBpB,OAAOqB,sCAAwCC,IAClEC,GAAiBC,cCHvBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MDEC,WACX,MAAMA,EAAQC,YACVC,EACAV,GAAiBW,YAAgBR,MEV1BS,MFaX,OADAT,GAAeU,KEZJD,EFYqB,CAACE,QAAOC,UAASC,QEZ3B,UAAI,8EAC5B,OAD4B,SACtBpE,EAAI,UAAC,wFACLqE,EAAJ,GADS,OAGQ,OAHR,SAGc1F,EAAMc,GAAWA,kBAAtC,eAHO,UAGDA,EAHC,OAHMnE,EAOYmE,EAAzB,KAAM6E,EAPM,UAAahJ,EAAKH,UAAlB,YAA+BG,EAAKF,WAApC,YAAkDE,cAAiBR,GAAnE,YAAyEQ,cAAiBiB,MAA1F,YAAmGjB,cAArH,OAQU+I,EAAJ,GALO,gBAML,OANK,cR8kBS,KADNE,EQvkBKF,EAAb,MRykBJE,EAAcxG,GAiBTmB,EA3RI,SA2ReqF,GQhmBf,OAQa,OARb,UAQmBvE,EAAI,UAAE,YAAa1E,MAAM,qCAAyBD,KAA5C,uEAEf,OAFe,kBAET0E,EAAKiE,KAAD,GAAvB,GAF4B,OAG5B,OADM/I,EAFsB,gBAGtBkB,EAAI,CACRtB,KAAO,eAAOM,EAAP,YAAD,EAAC,YADC,cAERgE,QAFQ,EAGR7D,KAAM,CACJH,UAAW,GAAF,OADL,EACK,YADL,aAGJE,iBATwB,8BAa5B,OAb4B,mCAatBc,EAAI,CACRtB,KAAO,eAAOM,EAAP,YAAD,EAAC,YADC,cAERgE,QAFQ,KAGR7D,KAAM,CACJH,UAAW,GAAF,OADL,EACK,YADL,aAGJE,iBAnBwB,wDAAhCgJ,GARO,QAQPA,KARO,wDR6kBb,IAAgBE,EQhlBGjJ,IAGN,OADiB,4CFanBsI,ECRUY,IACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SJsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAKC,IACJA,EAAaC,eAEdC,MAAMC,IACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.8f0a9ba4.chunk.js","sourcesContent":["function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {get} from 'lodash';\nimport {createSelector} from \"reselect\";\n\nexport const makeStoredDataSingleSelector = (type) => {\n  return createSelector(\n    (state) => get(state.data[type], `data.@RRH_SIGNLE`),\n    (data) => data,\n  );\n};\n\nexport const makeStoredDataByIdSelector = (type, id) => {\n  return createSelector(\n    (state) => get(state.data[type], `data[${id}]`),\n    (data) => data,\n  );\n};\n\nexport const makeStoredDataListSelector = (type, index = 0, size = 0 ) => {\n  return createSelector(\n    (state) => state.data[type],\n    (data) => {\n      const loadedArray = get(data, 'list', new Array(index + size).fill(undefined));\n      const isLimitedLoaded = (loadedArray.length >= (index + size)) && loadedArray.slice(index, index + size).every(item => item !== undefined);\n      const isInfiniteLoaded = get(data, 'isInfiniteLoaded', {})[index];\n      return {\n        data: get(data, 'list', [])\n          .slice(index, (size ? index + size : undefined))\n          .map(item => get(data, `data[${item}].data`))\n          .filter(item => item),\n        isListLoaded: size ? isLimitedLoaded : isInfiniteLoaded,\n        isLoadingList: get(data, 'isLoadingList'),\n        listResponse: get(data, 'listResponse'),\n      };\n    },\n  );\n};","import {useEffect, useCallback, useMemo} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n  makeStoredDataByIdSelector,\n  makeStoredDataListSelector,\n} from './selectors';\n\nconst createAction = (operation, entityType, queryParams) => ({\n  type: `@RRH_INIT_${operation}_${entityType}`.toUpperCase(),\n  meta: {\n    operation,\n    entityType,\n    queryParams,\n  },\n});\n\nexport const useEntity = (type, queryParams = {}, autoFetch = true) => {\n  const dispatch = useDispatch();\n  const updatedParams = queryParams.id ? queryParams : { ...queryParams, id: '@RRH_SINGLE' };\n\n  const selectStoredDataById = useMemo(\n    () => makeStoredDataByIdSelector(type, updatedParams.id),\n    [type, updatedParams.id]\n  );\n\n  const storedDataById = useSelector(selectStoredDataById);\n\n  useEffect(() => {\n    if (!storedDataById && autoFetch) {\n      dispatch(createAction('get', type, updatedParams));\n    }\n  }, [storedDataById, autoFetch, dispatch]);\n\n  return {\n    ...storedDataById,\n    refetch: () => dispatch(createAction('get', type, updatedParams)),\n    patch: () => dispatch(createAction('patch', type, updatedParams)),\n    put: () => dispatch(createAction('put', type, updatedParams)),\n    remove: () => dispatch(createAction('remove', type, updatedParams)),\n  };\n};\n\nexport const useCreateEntity = (type, queryParams = {}) => {\n  const dispatch = useDispatch();\n\n  const id = useMemo(\n    () => `@RRH_CREATION_ID_${new Date().getTime()}`,\n    [type],\n  );\n\n  const updatedParams = { ...queryParams, id };\n\n  const selectStoredDataById = useMemo(\n    () => makeStoredDataByIdSelector(type, updatedParams.id),\n    [type, updatedParams.id]\n  );\n\n  const storedDataById = useSelector(selectStoredDataById);\n\n  return {\n    ...storedDataById,\n    create: () => dispatch(createAction('create', type, updatedParams)),\n  };\n};\n\nexport const useEntityList = (type, queryParams = {}, autoFetch = true) => {\n  const dispatch = useDispatch();\n\n  const selectStoredDataListByType = useMemo(\n    () => makeStoredDataListSelector(type, queryParams.index, queryParams.size),\n    [type, queryParams.index, queryParams.size]\n  );\n\n  const storedDataList = useSelector(selectStoredDataListByType);\n\n  useEffect(() => {\n    if (!storedDataList.isListLoaded && autoFetch) {\n      dispatch(createAction('getList', type, queryParams));\n    }\n  }, [storedDataList.isListLoaded, autoFetch, dispatch]);\n\n  return {\n    data: storedDataList.data,\n    listResponse: storedDataList.listResponse,\n    isLoadingList: storedDataList.isLoadingList,\n    refetch: () => dispatch(createAction('getList', type, queryParams)),\n  }\n};\n\nexport const useEntityActions = (type) => {\n  const dispatch = useDispatch();\n  const get = useCallback(\n    (queryParams = {}) => dispatch(createAction('get', type, queryParams)),\n    [dispatch, type]\n  );\n  const getList = useCallback(\n    (queryParams = {}) => dispatch(createAction('getList', type, queryParams)),\n    [dispatch, type]\n  );\n  const create = useCallback(\n    (queryParams = {})  => dispatch(createAction('create', type, queryParams)),\n    [dispatch, type]\n  );\n  const put = useCallback(\n    (queryParams = {}) => dispatch(createAction('put', type, queryParams)),\n    [dispatch, type]\n  );\n  const patch = useCallback(\n    (queryParams = {}) => dispatch(createAction('patch', type, queryParams)),\n    [dispatch, type]\n  );\n  const remove = useCallback(\n    (queryParams = {}) => dispatch(createAction('remove', type, queryParams))\n    , [dispatch, type]\n  );\n  return {get, getList, create, put, patch, remove};\n};\n","function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    throw { status: response.status, statusText: response.statusText };\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nexport const fetchJSON = (...args) => fetch(...args).then(checkStatus).then(parseJSON);\n","var createSymbol = function createSymbol(name) {\n  return \"@@redux-saga/\" + name;\n};\n\nvar CANCEL =\n/*#__PURE__*/\ncreateSymbol('CANCEL_PROMISE');\nvar CHANNEL_END_TYPE =\n/*#__PURE__*/\ncreateSymbol('CHANNEL_END');\nvar IO =\n/*#__PURE__*/\ncreateSymbol('IO');\nvar MATCH =\n/*#__PURE__*/\ncreateSymbol('MATCH');\nvar MULTICAST =\n/*#__PURE__*/\ncreateSymbol('MULTICAST');\nvar SAGA_ACTION =\n/*#__PURE__*/\ncreateSymbol('SAGA_ACTION');\nvar SELF_CANCELLATION =\n/*#__PURE__*/\ncreateSymbol('SELF_CANCELLATION');\nvar TASK =\n/*#__PURE__*/\ncreateSymbol('TASK');\nvar TASK_CANCEL =\n/*#__PURE__*/\ncreateSymbol('TASK_CANCEL');\nvar TERMINATE =\n/*#__PURE__*/\ncreateSymbol('TERMINATE');\nvar SAGA_LOCATION =\n/*#__PURE__*/\ncreateSymbol('LOCATION');\n\nexport { CANCEL, CHANNEL_END_TYPE, IO, MATCH, MULTICAST, SAGA_ACTION, SAGA_LOCATION, SELF_CANCELLATION, TASK, TASK_CANCEL, TERMINATE };\n","import { TASK, SAGA_ACTION, MULTICAST, IO } from '@redux-saga/symbols';\n\nvar undef = function undef(v) {\n  return v === null || v === undefined;\n};\nvar notUndef = function notUndef(v) {\n  return v !== null && v !== undefined;\n};\nvar func = function func(f) {\n  return typeof f === 'function';\n};\nvar number = function number(n) {\n  return typeof n === 'number';\n};\nvar string = function string(s) {\n  return typeof s === 'string';\n};\nvar array = Array.isArray;\nvar object = function object(obj) {\n  return obj && !array(obj) && typeof obj === 'object';\n};\nvar promise = function promise(p) {\n  return p && func(p.then);\n};\nvar iterator = function iterator(it) {\n  return it && func(it.next) && func(it.throw);\n};\nvar iterable = function iterable(it) {\n  return it && func(Symbol) ? func(it[Symbol.iterator]) : array(it);\n};\nvar task = function task(t) {\n  return t && t[TASK];\n};\nvar sagaAction = function sagaAction(a) {\n  return Boolean(a && a[SAGA_ACTION]);\n};\nvar observable = function observable(ob) {\n  return ob && func(ob.subscribe);\n};\nvar buffer = function buffer(buf) {\n  return buf && func(buf.isEmpty) && func(buf.take) && func(buf.put);\n};\nvar pattern = function pattern(pat) {\n  return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));\n};\nvar channel = function channel(ch) {\n  return ch && func(ch.take) && func(ch.close);\n};\nvar stringableFunc = function stringableFunc(f) {\n  return func(f) && f.hasOwnProperty('toString');\n};\nvar symbol = function symbol(sym) {\n  return Boolean(sym) && typeof Symbol === 'function' && sym.constructor === Symbol && sym !== Symbol.prototype;\n};\nvar multicast = function multicast(ch) {\n  return channel(ch) && ch[MULTICAST];\n};\nvar effect = function effect(eff) {\n  return eff && eff[IO];\n};\n\nexport { array, buffer, channel, effect, func, iterable, iterator, multicast, notUndef, number, object, observable, pattern, promise, sagaAction, string, stringableFunc, symbol, task, undef };\n","import { TASK_CANCEL, TERMINATE, SAGA_LOCATION, SAGA_ACTION, IO, SELF_CANCELLATION } from '@redux-saga/symbols';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { array, notUndef, pattern, multicast, channel, undef, effect, task, func, buffer, string, object } from '@redux-saga/is';\nimport delayP from '@redux-saga/delay-p';\n\nvar konst = function konst(v) {\n  return function () {\n    return v;\n  };\n};\nvar kTrue =\n/*#__PURE__*/\nkonst(true);\n\nvar noop = function noop() {};\n\nif (process.env.NODE_ENV !== 'production' && typeof Proxy !== 'undefined') {\n  noop =\n  /*#__PURE__*/\n  new Proxy(noop, {\n    set: function set() {\n      throw internalErr('There was an attempt to assign a property to internal `noop` function.');\n    }\n  });\n}\nvar identity = function identity(v) {\n  return v;\n};\nvar hasSymbol = typeof Symbol === 'function';\nvar asyncIteratorSymbol = hasSymbol && Symbol.asyncIterator ? Symbol.asyncIterator : '@@asyncIterator';\nfunction check(value, predicate, error) {\n  if (!predicate(value)) {\n    throw new Error(error);\n  }\n}\nvar assignWithSymbols = function assignWithSymbols(target, source) {\n  _extends(target, source);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(source).forEach(function (s) {\n      target[s] = source[s];\n    });\n  }\n};\nvar flatMap = function flatMap(mapper, arr) {\n  var _ref;\n\n  return (_ref = []).concat.apply(_ref, arr.map(mapper));\n};\nfunction remove(array, item) {\n  var index = array.indexOf(item);\n\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction once(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    fn();\n  };\n}\n\nvar kThrow = function kThrow(err) {\n  throw err;\n};\n\nvar kReturn = function kReturn(value) {\n  return {\n    value: value,\n    done: true\n  };\n};\n\nfunction makeIterator(next, thro, name) {\n  if (thro === void 0) {\n    thro = kThrow;\n  }\n\n  if (name === void 0) {\n    name = 'iterator';\n  }\n\n  var iterator = {\n    meta: {\n      name: name\n    },\n    next: next,\n    throw: thro,\n    return: kReturn,\n    isSagaIterator: true\n  };\n\n  if (typeof Symbol !== 'undefined') {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n\n  return iterator;\n}\nfunction logError(error, _ref2) {\n  var sagaStack = _ref2.sagaStack;\n\n  /*eslint-disable no-console*/\n  console.error(error);\n  console.error(sagaStack);\n}\nvar internalErr = function internalErr(err) {\n  return new Error(\"\\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\\n  in redux-saga code and not yours. Thanks for reporting this in the project's github repo.\\n  Error: \" + err + \"\\n\");\n};\nvar createSetContextWarning = function createSetContextWarning(ctx, props) {\n  return (ctx ? ctx + '.' : '') + \"setContext(props): argument \" + props + \" is not a plain object\";\n};\nvar FROZEN_ACTION_ERROR = \"You can't put (a.k.a. dispatch from saga) frozen actions.\\nWe have to define a special non-enumerable property on those actions for scheduling purposes.\\nOtherwise you wouldn't be able to communicate properly between sagas & other subscribers (action ordering would become far less predictable).\\nIf you are using redux and you care about this behaviour (frozen actions),\\nthen you might want to switch to freezing actions in a middleware rather than in action creator.\\nExample implementation:\\n\\nconst freezeActions = store => next => action => next(Object.freeze(action))\\n\"; // creates empty, but not-holey array\n\nvar createEmptyArray = function createEmptyArray(n) {\n  return Array.apply(null, new Array(n));\n};\nvar wrapSagaDispatch = function wrapSagaDispatch(dispatch) {\n  return function (action) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(action, function (ac) {\n        return !Object.isFrozen(ac);\n      }, FROZEN_ACTION_ERROR);\n    }\n\n    return dispatch(Object.defineProperty(action, SAGA_ACTION, {\n      value: true\n    }));\n  };\n};\nvar shouldTerminate = function shouldTerminate(res) {\n  return res === TERMINATE;\n};\nvar shouldCancel = function shouldCancel(res) {\n  return res === TASK_CANCEL;\n};\nvar shouldComplete = function shouldComplete(res) {\n  return shouldTerminate(res) || shouldCancel(res);\n};\nfunction createAllStyleChildCallbacks(shape, parentCallback) {\n  var keys = Object.keys(shape);\n  var totalCount = keys.length;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(totalCount, function (c) {\n      return c > 0;\n    }, 'createAllStyleChildCallbacks: get an empty array or object');\n  }\n\n  var completedCount = 0;\n  var completed;\n  var results = array(shape) ? createEmptyArray(totalCount) : {};\n  var childCallbacks = {};\n\n  function checkEnd() {\n    if (completedCount === totalCount) {\n      completed = true;\n      parentCallback(results);\n    }\n  }\n\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        parentCallback.cancel();\n        parentCallback(res, isErr);\n      } else {\n        results[key] = res;\n        completedCount++;\n        checkEnd();\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCallbacks[key] = chCbAtKey;\n  });\n\n  parentCallback.cancel = function () {\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCallbacks[key].cancel();\n      });\n    }\n  };\n\n  return childCallbacks;\n}\nfunction getMetaInfo(fn) {\n  return {\n    name: fn.name || 'anonymous',\n    location: getLocation(fn)\n  };\n}\nfunction getLocation(instrumented) {\n  return instrumented[SAGA_LOCATION];\n}\n\nvar BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\nvar zeroBuffer = {\n  isEmpty: kTrue,\n  put: noop,\n  take: noop\n};\n\nfunction ringBuffer(limit, overflowAction) {\n  if (limit === void 0) {\n    limit = 10;\n  }\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n\n    while (length) {\n      items.push(take());\n    }\n\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit;\n\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n            arr = flush();\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n            push(it);\n            break;\n\n          default: // DROP\n\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nvar none = function none() {\n  return zeroBuffer;\n};\nvar fixed = function fixed(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_THROW);\n};\nvar dropping = function dropping(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_DROP);\n};\nvar sliding = function sliding(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n};\nvar expanding = function expanding(initialSize) {\n  return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n};\n\nvar buffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  none: none,\n  fixed: fixed,\n  dropping: dropping,\n  sliding: sliding,\n  expanding: expanding\n});\n\nvar TAKE = 'TAKE';\nvar PUT = 'PUT';\nvar ALL = 'ALL';\nvar RACE = 'RACE';\nvar CALL = 'CALL';\nvar CPS = 'CPS';\nvar FORK = 'FORK';\nvar JOIN = 'JOIN';\nvar CANCEL = 'CANCEL';\nvar SELECT = 'SELECT';\nvar ACTION_CHANNEL = 'ACTION_CHANNEL';\nvar CANCELLED = 'CANCELLED';\nvar FLUSH = 'FLUSH';\nvar GET_CONTEXT = 'GET_CONTEXT';\nvar SET_CONTEXT = 'SET_CONTEXT';\n\nvar effectTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TAKE: TAKE,\n  PUT: PUT,\n  ALL: ALL,\n  RACE: RACE,\n  CALL: CALL,\n  CPS: CPS,\n  FORK: FORK,\n  JOIN: JOIN,\n  CANCEL: CANCEL,\n  SELECT: SELECT,\n  ACTION_CHANNEL: ACTION_CHANNEL,\n  CANCELLED: CANCELLED,\n  FLUSH: FLUSH,\n  GET_CONTEXT: GET_CONTEXT,\n  SET_CONTEXT: SET_CONTEXT\n});\n\nvar TEST_HINT = '\\n(HINT: if you are getting these errors in tests, consider using createMockTask from @redux-saga/testing-utils)';\n\nvar makeEffect = function makeEffect(type, payload) {\n  var _ref;\n\n  return _ref = {}, _ref[IO] = true, _ref.combinator = false, _ref.type = type, _ref.payload = payload, _ref;\n};\n\nvar isForkEffect = function isForkEffect(eff) {\n  return effect(eff) && eff.type === FORK;\n};\n\nvar detach = function detach(eff) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(eff, isForkEffect, 'detach(eff): argument must be a fork effect');\n  }\n\n  return makeEffect(FORK, _extends({}, eff.payload, {\n    detached: true\n  }));\n};\nfunction take(patternOrChannel, multicastPattern) {\n  if (patternOrChannel === void 0) {\n    patternOrChannel = '*';\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'take(patternOrChannel): patternOrChannel is undefined');\n  }\n\n  if (pattern(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      pattern: patternOrChannel\n    });\n  }\n\n  if (multicast(patternOrChannel) && notUndef(multicastPattern) && pattern(multicastPattern)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel,\n      pattern: multicastPattern\n    });\n  }\n\n  if (channel(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    throw new Error(\"take(patternOrChannel): argument \" + patternOrChannel + \" is not valid channel or a valid pattern\");\n  }\n}\nvar takeMaybe = function takeMaybe() {\n  var eff = take.apply(void 0, arguments);\n  eff.payload.maybe = true;\n  return eff;\n};\nfunction put(channel$1, action) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      check(channel$1, notUndef, 'put(channel, action): argument channel is undefined');\n      check(channel$1, channel, \"put(channel, action): argument \" + channel$1 + \" is not a valid channel\");\n      check(action, notUndef, 'put(channel, action): argument action is undefined');\n    } else {\n      check(channel$1, notUndef, 'put(action): argument action is undefined');\n    }\n  }\n\n  if (undef(action)) {\n    action = channel$1; // `undefined` instead of `null` to make default parameter work\n\n    channel$1 = undefined;\n  }\n\n  return makeEffect(PUT, {\n    channel: channel$1,\n    action: action\n  });\n}\nvar putResolve = function putResolve() {\n  var eff = put.apply(void 0, arguments);\n  eff.payload.resolve = true;\n  return eff;\n};\nfunction all(effects) {\n  var eff = makeEffect(ALL, effects);\n  eff.combinator = true;\n  return eff;\n}\nfunction race(effects) {\n  var eff = makeEffect(RACE, effects);\n  eff.combinator = true;\n  return eff;\n} // this match getFnCallDescriptor logic\n\nvar validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {\n  check(fnDescriptor, notUndef, effectName + \": argument fn is undefined or null\");\n\n  if (func(fnDescriptor)) {\n    return;\n  }\n\n  var context = null;\n  var fn;\n\n  if (array(fnDescriptor)) {\n    context = fnDescriptor[0];\n    fn = fnDescriptor[1];\n    check(fn, notUndef, effectName + \": argument of type [context, fn] has undefined or null `fn`\");\n  } else if (object(fnDescriptor)) {\n    context = fnDescriptor.context;\n    fn = fnDescriptor.fn;\n    check(fn, notUndef, effectName + \": argument of type {context, fn} has undefined or null `fn`\");\n  } else {\n    check(fnDescriptor, func, effectName + \": argument fn is not function\");\n    return;\n  }\n\n  if (context && string(fn)) {\n    check(context[fn], func, effectName + \": context arguments has no such method - \\\"\" + fn + \"\\\"\");\n    return;\n  }\n\n  check(fn, func, effectName + \": unpacked fn argument (from [context, fn] or {context, fn}) is not a function\");\n};\n\nfunction getFnCallDescriptor(fnDescriptor, args) {\n  var context = null;\n  var fn;\n\n  if (func(fnDescriptor)) {\n    fn = fnDescriptor;\n  } else {\n    if (array(fnDescriptor)) {\n      context = fnDescriptor[0];\n      fn = fnDescriptor[1];\n    } else {\n      context = fnDescriptor.context;\n      fn = fnDescriptor.fn;\n    }\n\n    if (context && string(fn) && func(context[fn])) {\n      fn = context[fn];\n    }\n  }\n\n  return {\n    context: context,\n    fn: fn,\n    args: args\n  };\n}\n\nvar isNotDelayEffect = function isNotDelayEffect(fn) {\n  return fn !== delay;\n};\n\nfunction call(fnDescriptor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    var arg0 = typeof args[0] === 'number' ? args[0] : 'ms';\n    check(fnDescriptor, isNotDelayEffect, \"instead of writing `yield call(delay, \" + arg0 + \")` where delay is an effect from `redux-saga/effects` you should write `yield delay(\" + arg0 + \")`\");\n    validateFnDescriptor('call', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction apply(context, fn, args) {\n  if (args === void 0) {\n    args = [];\n  }\n\n  var fnDescriptor = [context, fn];\n\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('apply', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor([context, fn], args));\n}\nfunction cps(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('cps', fnDescriptor);\n  }\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return makeEffect(CPS, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction fork(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('fork', fnDescriptor);\n    check(fnDescriptor, function (arg) {\n      return !effect(arg);\n    }, 'fork: argument must not be an effect');\n  }\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction spawn(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('spawn', fnDescriptor);\n  }\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  return detach(fork.apply(void 0, [fnDescriptor].concat(args)));\n}\nfunction join(taskOrTasks) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('join(...tasks) is not supported any more. Please use join([...tasks]) to join multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"join([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else {\n      check(taskOrTasks, task, \"join(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(JOIN, taskOrTasks);\n}\nfunction cancel(taskOrTasks) {\n  if (taskOrTasks === void 0) {\n    taskOrTasks = SELF_CANCELLATION;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('cancel(...tasks) is not supported any more. Please use cancel([...tasks]) to cancel multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"cancel([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else if (taskOrTasks !== SELF_CANCELLATION && notUndef(taskOrTasks)) {\n      check(taskOrTasks, task, \"cancel(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(CANCEL, taskOrTasks);\n}\nfunction select(selector) {\n  if (selector === void 0) {\n    selector = identity;\n  }\n\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'select(selector, [...]): argument selector is undefined');\n    check(selector, func, \"select(selector, [...]): argument \" + selector + \" is not a function\");\n  }\n\n  return makeEffect(SELECT, {\n    selector: selector,\n    args: args\n  });\n}\n/**\n  channel(pattern, [buffer])    => creates a proxy channel for store actions\n**/\n\nfunction actionChannel(pattern$1, buffer$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(pattern$1, pattern, 'actionChannel(pattern,...): argument pattern is not valid');\n\n    if (arguments.length > 1) {\n      check(buffer$1, notUndef, 'actionChannel(pattern, buffer): argument buffer is undefined');\n      check(buffer$1, buffer, \"actionChannel(pattern, buffer): argument \" + buffer$1 + \" is not a valid buffer\");\n    }\n  }\n\n  return makeEffect(ACTION_CHANNEL, {\n    pattern: pattern$1,\n    buffer: buffer$1\n  });\n}\nfunction cancelled() {\n  return makeEffect(CANCELLED, {});\n}\nfunction flush(channel$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(channel$1, channel, \"flush(channel): argument \" + channel$1 + \" is not valid channel\");\n  }\n\n  return makeEffect(FLUSH, channel$1);\n}\nfunction getContext(prop) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(prop, string, \"getContext(prop): argument \" + prop + \" is not a string\");\n  }\n\n  return makeEffect(GET_CONTEXT, prop);\n}\nfunction setContext(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(props, object, createSetContextWarning(null, props));\n  }\n\n  return makeEffect(SET_CONTEXT, props);\n}\nvar delay =\n/*#__PURE__*/\ncall.bind(null, delayP);\n\nexport { apply as $, ALL as A, logError as B, CALL as C, wrapSagaDispatch as D, identity as E, FORK as F, GET_CONTEXT as G, buffers as H, detach as I, JOIN as J, take as K, fork as L, cancel as M, call as N, actionChannel as O, PUT as P, sliding as Q, RACE as R, SELECT as S, TAKE as T, delay as U, race as V, effectTypes as W, takeMaybe as X, put as Y, putResolve as Z, all as _, CPS as a, cps as a0, spawn as a1, join as a2, select as a3, cancelled as a4, flush as a5, getContext as a6, setContext as a7, CANCEL as b, check as c, ACTION_CHANNEL as d, expanding as e, CANCELLED as f, FLUSH as g, SET_CONTEXT as h, internalErr as i, getMetaInfo as j, kTrue as k, createAllStyleChildCallbacks as l, createEmptyArray as m, none as n, once as o, assignWithSymbols as p, makeIterator as q, remove as r, shouldComplete as s, noop as t, flatMap as u, getLocation as v, createSetContextWarning as w, asyncIteratorSymbol as x, shouldCancel as y, shouldTerminate as z };\n","import {omit, get} from 'lodash';\n\nconst defaultStates = {\n  isLoading: false,\n  isPutting: false,\n  isPatching: false,\n  isRemoving: false,\n  isCreating: false,\n  getError: null,\n  putError: null,\n  patchError: null,\n  removeError: null,\n  createError: null,\n};\n\nconst pureOperation = operation =>\n  operation\n    .replace('_failure', '')\n    .replace('_success', '');\n\nconst getPendingKey = operation => {\n  return ({\n    get: 'isLoading',\n    create: 'isCreating',\n    put: 'isPutting',\n    patch: 'isPatching',\n    remove: 'isRemoving',\n  })[pureOperation(operation)]\n};\n\nconst getErrorKey = operation => {\n  return `${pureOperation(operation)}Error`;\n};\n\n\nexport default (state={}, {payload, meta = {}}) => {\n\n  const entity = get(state, meta.entityType, {});\n  const data = get(entity, 'data', {});\n  const entityById = data[get(meta, 'queryParams.id')] || {};\n\n  switch (meta.operation) {\n    case 'create_success':\n      return {\n        ...state,\n        [meta.entityType]: {\n          ...entity,\n          data: {\n            ...get(state[meta.entityType], 'data', {}),\n            [payload.id]: {\n              ...defaultStates,\n              data: payload,\n            },\n            [meta.queryParams.id]: {\n              ...defaultStates,\n              data: payload,\n            }\n          }\n        }\n      };\n    case 'get':\n    case 'put':\n    case 'patch':\n    case 'remove':\n    case 'create':\n      return {\n        ...state,\n        [meta.entityType]: {\n          ...entity,\n          data: {\n            ...data,\n            [meta.queryParams.id]: {\n              ...entityById,\n              [getPendingKey(meta.operation)]: true,\n              [getErrorKey(meta.operation)]: null,\n            }\n          }\n        }\n      };\n    case 'get_failure':\n    case 'put_failure':\n    case 'patch_failure':\n    case 'remove_failure':\n    case 'create_failure':\n      return {\n        ...state,\n        [meta.entityType]: {\n          ...entity,\n          data: {\n            ...data,\n            [meta.queryParams.id]: {\n              ...entityById,\n              [getPendingKey(meta.operation)]: false,\n              [getErrorKey(meta.operation)]: payload,\n            }\n          }\n        }\n      };\n    case 'get_success':\n    case 'put_success':\n    case 'patch_success':\n      return {\n        ...state,\n        [meta.entityType]: {\n          ...entity,\n          data: {\n            ...data,\n            [meta.queryParams.id]: {\n              ...entityById,\n              [getPendingKey(meta.operation)]: false,\n              [getErrorKey(meta.operation)]: null,\n              data: payload,\n            }\n          }\n        }\n      };\n    case 'remove_success':\n      return {\n        ...state,\n        [meta.entityType]: {\n          ...entity,\n          data: omit(get(state[meta.entityType], 'data', {}), meta.queryParams.id),\n        }\n      };\n    case 'getList':\n      return {\n        ...state,\n        [meta.entityType]: {\n          ...entity,\n          isLoadingList: true,\n          getListError: null,\n        }\n      };\n    case 'getList_failure':\n      return {\n        ...state,\n        [meta.entityType]: {\n          ...entity,\n          isLoadingList: false,\n          getListError: payload,\n        }\n      };\n    case 'getList_success':\n      const payloadList = payload.data;\n\n      const requestIndex = meta.queryParams.index || 0;\n      const responseSize = (meta.queryParams.size || payloadList.length);\n      const existingList = get(state[meta.entityType], 'list', []);\n\n      const isInfiniteLoaded = get(state[meta.entityType], 'isInfiniteLoaded', {});\n      return {\n        ...state,\n        [meta.entityType]: {\n          ...entity,\n          isLoadingList: false,\n          getListError: null,\n          listResponse: omit(payload, 'data'),\n          isInfiniteLoaded: meta.queryParams.size ? isInfiniteLoaded : {\n            ...isInfiniteLoaded,\n            [requestIndex]: true,\n          },\n          list: (new Array(Math.max(requestIndex + responseSize, existingList.length)))\n              .fill(null)\n              .map(\n                (item, index) => ((index < requestIndex) || (index > (requestIndex + responseSize))) ?\n                  existingList[index] : (payloadList[index - requestIndex] || { id: null }).id\n              ),\n          data: {\n            ...get(state[meta.entityType], 'data', {}),\n            ...payloadList\n              .map((item) => ({ ...defaultStates, data: item }))\n                .reduce((obj, item) => {\n                  obj[item.data.id] = item;\n                  return obj;\n                }, {})\n          }\n        }\n      };\n    default:\n      return state;\n  }\n};","import React, {useState} from 'react';\nimport { useEntity, useEntityList, useEntityActions, useCreateEntity } from \"redux-rest-hooks\";\n\nconst ItemView = ({id, itemType}) => {\n  const {data, isLoading, refetch} = useEntity(itemType, { id});\n  return isLoading ? <div>Loading...</div> : <div><div>{JSON.stringify(data)}</div><br /><button onClick={refetch}>Refetch</button></div>\n};\n\nconst CommentsList = React.memo(() => {\n  const test = useEntityList('comment', { size: 50 });\n  const {getList} = useEntityActions('comment');\n\n  //const test2 = useEntityList('comment', { index: 20, size: 10});\n  return <><div>{JSON.stringify(test.data)}</div><button onClick={() => getList({ index: 20, size: 10})}>test</button></>;\n});\n\nconst Album = React.memo(({id}) => {\n  const {refetch, data} = useEntityList('album', );\n  const {refetch: refetch2, data: data2, create} = useCreateEntity('album');\n  return <div><button onClick={create}>create</button>{JSON.stringify(data)}</div>;\n});\n\n\nconst User = React.memo(({ id }) => {\n  const { data, isLoading } = useEntity('user', {id});\n  return <div>{JSON.stringify(test.data)}</div>;\n});\n\nconst Pagination = React.memo(() => {\n  const [index, setIndex] = useState(0);\n  const {data} = useEntityList('album', { index, size: 2, test: index});\n\n\n  //const test2 = useEntityList('comment', { index: 20, size: 10});\n  return <><div>{JSON.stringify(data)}</div>\n    <button onClick={() => setIndex(index - 2)}>Prev</button>\n    <button onClick={() => setIndex(index + 2)}>Next</button>\n  </>;\n});\n\n\n\nfunction App() {\n  const [itemId, setItemId] = useState();\n  const [itemType, setItemType] = useState('album');\n  const {create: leaveComment, fetchList: fetchComments} = useEntityActions('comment');\n  return <>\n    <Album id={1}/>\n    <Album id={2}/>\n    </>;\n\n  return (\n    <div className=\"App\">\n      <select value={itemType} onChange={event => setItemType(event.target.value)}>\n        <option value=\"album\">album</option>\n        <option value=\"comment\">comment</option>\n        <option value=\"user\">user</option>\n      </select>\n      <button onClick={() => leaveComment({ text: 'demo'})}>leave comment</button>\n      <button onClick={() => fetchComments({ index: 0, size: 20 })}>get all comments 1</button>\n      <button onClick={() => fetchComments({ index: 20, size: 20 })}>get all comments 2</button>\n\n      <button onClick={() => fetchComments({ index: 40, size: 20 })}>get all comments 3</button>\n      <button onClick={() => fetchComments({ index: 60 })}>get all comments 3</button>\n      <input onChange={event => setItemId(event.target.value)} />\n      {itemId && <ItemView id={itemId} itemType={itemType} />}\n      <CommentsList />\n      {/*<Album1/>\n      <Album2/>*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\nimport {dataReducer} from \"redux-rest-hooks\";\n\nexport default combineReducers({\n  data: dataReducer,\n});\n","import {call, delay} from 'redux-saga/effects'\nimport {fetchJSON} from 'redux-rest-hooks';\n\nexport const get = function* ({id}) {\n  yield delay(5000);\n  return { demo: 123, id };\n};\n\n\nexport const getList = function* ({id}) {\n  const data = yield call(fetchJSON, `https://jsonplaceholder.typicode.com/albums/`);\n  return { data, size: 1000 };\n};\n\n\n\nexport const create = function* (payload) {\n  return yield call(fetchJSON, `https://jsonplaceholder.typicode.com/albums/`, { method: 'POST', body: payload });\n};\n\nexport const put = ({id}) => fetchJSON(`https://jsonplaceholder.typicode.com/albums/${id}`);\nexport const patch = ({id}) => fetchJSON(`https://jsonplaceholder.typicode.com/albums/${id}`);\nexport const remove = ({id}) => fetchJSON(`https://jsonplaceholder.typicode.com/albums/${id}`);\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport {makeRootSaga} from 'redux-rest-hooks';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers/rootReducer';\n\nimport * as album from './sagas/album';\nimport * as comment from './sagas/album';\nimport * as user from './sagas/album';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nexport default function configureStore() {\n    const store = createStore(\n        rootReducer,\n        composeEnhancers(applyMiddleware(sagaMiddleware))\n    );\n    sagaMiddleware.run(makeRootSaga({album, comment, user}));\n    return store;\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {fork, cancel, take, call, put} from 'redux-saga/effects'\n\nconst getTaskId = (meta) => `${meta.operation}_${meta.entityType}_${meta.queryParams.id}_${meta.queryParams.index}_${meta.queryParams.size}`;\n\nexport default entitySagas => function*() {\n  yield fork(function*() {\n    let lastTasks = {};\n    while (true) {\n      const action = yield take((action) => action.type.startsWith('@RRH_INIT_'));\n      const taskId = getTaskId(action.meta);\n      if (lastTasks[taskId]) {\n        yield cancel(lastTasks[taskId]);\n      }\n      lastTasks[taskId] = yield fork((function* ({ meta: { entityType, operation, queryParams }}) {\n        try {\n          const data = yield call(entitySagas[entityType][operation], queryParams);\n          yield put({\n            type: `@RRH_${operation}_${entityType}_SUCCESS`.toUpperCase(),\n            payload: data,\n            meta: {\n              operation: `${operation}_success`,\n              entityType,\n              queryParams,\n            }\n          });\n        } catch (error) {\n          yield put({\n            type: `@RRH_${operation}_${entityType}_FAILURE`.toUpperCase(),\n            payload: error,\n            meta: {\n              operation: `${operation}_failure`,\n              entityType,\n              queryParams,\n            }\n          });\n        }\n      }), action);\n    }\n  });\n};\n"],"sourceRoot":""}